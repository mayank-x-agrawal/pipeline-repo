AWSTemplateFormatVersion: '2010-09-09'
Description: Generalized CodePipeline for a single microservice deployment.

Parameters:
  GitHubOwner:
    Type: String
    Description: GitHub repository owner.
  MicroserviceRepoName:
    Type: String
    Description: Name of the microservice GitHub repository to deploy (e.g., helloworld1-repo).
  MicroserviceStackName:
    Type: String
    Description: CloudFormation stack name for the microservice.
  BuildSpecPath:
    Type: String
    Description: The path to the buildspec file.
    Default: buildspec.yml

Resources:
  PipelineArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudFormationPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:*'
                Resource:
                  - !Sub 'arn:aws:s3:::${MicroserviceStackName}-*'
                  - !Sub 'arn:aws:s3:::${MicroserviceStackName}-*/*'
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: '*'

  CodeBuildRole:
    Type: AWS::IAM::Role
    DependsOn:
      - PipelineArtifactBucket
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                # Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${CodeBuildProject}:*'
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                  - s3:GetBucketAcl
                  - s3:PutBucketAcl
                Resource:
                  - !Sub 'arn:aws:s3:::${PipelineArtifactBucket}'
                  - !Sub 'arn:aws:s3:::${PipelineArtifactBucket}/*'

  CodePipelineRole:
    Type: AWS::IAM::Role
    DependsOn:
      - PipelineArtifactBucket
      - CloudFormationRole
      - CodeBuildRole
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetBucketAcl
                  - s3:PutBucketAcl
                Resource:
                  - !Sub 'arn:aws:s3:::${PipelineArtifactBucket}'
                  - !Sub 'arn:aws:s3:::${PipelineArtifactBucket}/*'
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:StopBuild
                  - codebuild:BatchGetBuilds
                Resource: !GetAtt CodeBuildProject.Arn
              - Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                Resource: !ImportValue MyGitHubRepoConnectionArn
              - Effect: Allow
                Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeStacks
                  - cloudformation:GetTemplate
                Resource: !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${MicroserviceStackName}/*'
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !GetAtt CodeBuildRole.Arn
                  - !GetAtt CloudFormationRole.Arn

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${MicroserviceStackName}-CodeBuild'
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Ref BuildSpecPath

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn:
      - CodeBuildProject
      - CodePipelineRole
    Properties:
      Name: !Sub '${MicroserviceStackName}-Pipeline'
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                ConnectionArn: !ImportValue MyGitHubRepoConnectionArn
                FullRepositoryId: !Sub '${GitHubOwner}/${MicroserviceRepoName}'
                BranchName: main
        - Name: Build
          Actions:
            - Name: BuildArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ProjectName: !Ref CodeBuildProject
        - Name: CreateChangeSet
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: !Sub '${MicroserviceStackName}-ChangeSet'
                StackName: !Ref MicroserviceStackName
                RoleArn: !GetAtt CloudFormationRole.Arn
                TemplatePath: BuildArtifact::template.yaml
                TemplateConfiguration: BuildArtifact::config.json
        - Name: ManualApproval
          Actions:
            - Name: ApproveDeployment
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
        - Name: DeployChangeSet
          Actions:
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Sub '${MicroserviceStackName}-ChangeSet'
                StackName: !Ref MicroserviceStackName